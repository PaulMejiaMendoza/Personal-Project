{"version":3,"file":"../../PERSONAL-PROJECT/sass/style.css","sources":["style.scss","global/_variables.scss","global/_reset.scss","global/_base.scss","mixins/_rem.scss","components/_header.scss","components/_main.scss"],"sourcesContent":["//core------------------------\r\n@import \"global/variables\";\r\n\r\n\r\n//global\r\n//-------------------------------\r\n@import \"global/reset\";\r\n@import \"global/base\";\r\n@import \"mixins/rem\";\r\n\r\n//Fonts\r\n//-------------------------------------\r\n@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:400,700|Roboto:300,400,700,900&display=swap\");\r\n\r\n\r\n\r\n//components\r\n//--------------------\r\n@import \"components/header\";\r\n@import \"components/main\";\r\n   \r\n","//----------------------------------------\r\n// VARIABLES------------------------------\r\n\r\n\r\n//Colors-----------\r\n$primary:   #529b1c;\r\n$secondary: #37a7e8;\r\n$success:   #66c226;\r\n$warning:   #f7b500;\r\n$danger:    #e02020;\r\n\r\n//Gray\r\n//----------------\r\n$gray-100: #e5e5e8;\r\n$gray-200: #dcdcdf;\r\n$gray-300: #c7c7cd;\r\n\r\n//Scaffolding\r\n//------------------------------\r\n$body-color: #000;\r\n$body-bg:    #fff;\r\n\r\n$link-color:        $secondary;\r\n$link-decoration:   underline;\r\n$link-hover:        none;\r\n\r\n$paragraph-bottom:  1rem;\r\n\r\n//Font\r\n//----------------------------------------------------\r\n$font-primary:            \"Roboto\";\r\n$font-secondary:          \"Quattrocento\";\r\n$font-family-primary:     $font-primary, Arial, sans-serif;\r\n$font-family-secondary:   $font-secondary, serif;\r\n\r\n$font-size-base:          15px;\r\n$font-weight-light:       300;\r\n$font-weight-normal:      400;\r\n$font-weight-medium:      500;\r\n$font-weight-bold:        700;","*, *::before, *::after{\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n\r\n/* Iniciaci√≥n de la propiedad \"display\" para etiquetas de HTML5 para navegadores antiguos */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n  display: block;\r\n}\r\nbody {\r\n  line-height: 1.65rem;\r\n  \r\n}\r\nol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}","body {\r\n  min-width: 320px;\r\n}","$rem-baseline: 16px !default;\n$rem-fallback: false !default;\n$rem-px-only: false !default;\n\n@function rem-separator($list, $separator: false) {\n  @if $separator == \"comma\" or $separator == \"space\" {\n    @return append($list, null, $separator);\n  } \n  \n  @if function-exists(\"list-separator\") == true {\n    @return list-separator($list);\n  }\n\n  // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)\n  $test-list: ();\n  @each $item in $list {\n    $test-list: append($test-list, $item, space);\n  }\n\n  @return if($test-list == $list, space, comma);\n}\n\n@mixin rem-baseline($zoom: 100%) {\n  font-size: $zoom / 16px * $rem-baseline;\n}\n\n@function rem-convert($to, $values...) {\n  $result: ();\n  $separator: rem-separator($values);\n  \n  @each $value in $values {\n    @if type-of($value) == \"number\" and unit($value) == \"rem\" and $to == \"px\" {\n      $result: append($result, $value / 1rem * $rem-baseline, $separator);\n    } @else if type-of($value) == \"number\" and unit($value) == \"px\" and $to == \"rem\" {\n      $result: append($result, $value / $rem-baseline * 1rem, $separator);\n    } @else if type-of($value) == \"list\" {\n      $value-separator: rem-separator($value);\n      $value: rem-convert($to, $value...);\n      $value: rem-separator($value, $value-separator);\n      $result: append($result, $value, $separator);\n    } @else {\n      $result: append($result, $value, $separator);\n    }\n  }\n\n  @return if(length($result) == 1, nth($result, 1), $result);\n}\n\n@function rem($values...) {\n  @if $rem-px-only {\n    @return rem-convert(px, $values...);\n  } @else {\n    @return rem-convert(rem, $values...);\n  }\n}\n\n@mixin rem($properties, $values...) {\n  @if type-of($properties) == \"map\" {\n    @each $property in map-keys($properties) {\n      @include rem($property, map-get($properties, $property));\n    }\n  } @else {\n    @each $property in $properties {\n      @if $rem-fallback or $rem-px-only {\n        #{$property}: rem-convert(px, $values...);\n      }\n      @if not $rem-px-only {\n        #{$property}: rem-convert(rem, $values...);\n      }\n    }\n  }\n}\n",".mainheader {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: rem(80px);\r\n  background-color: #d3bbaf;\r\n\r\n  .social-icons {\r\n    position: absolute;\r\n    left: 0;\r\n    margin-left: 20px;\r\n  }\r\n\r\n  .maintitle {\r\n    width: rem(155px);\r\n    height: rem(20px);\r\n    font-family: 'Open-Sans';\r\n    text-decoration: none;\r\n    color: #fff;\r\n    text-align: center;\r\n    line-height: 1rem;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .btn__menu {\r\n    position: absolute;\r\n    margin-left: 20px;\r\n    height: 60px;\r\n    width: 60px;\r\n    background-color: #d3bbaf;\r\n    border: none;\r\n    right: 0;\r\n  }\r\n}\r\n",".content {\r\n  height: rem(350px);\r\n  background-color: #fff0d2;\r\n  padding: rem(30px) 0;\r\n  &__title {\r\n    font-family: 'Roboto', 'Open-Sans';\r\n    font-size: 1.5rem;\r\n    padding: 0 rem(20px);\r\n    text-align: center;\r\n    margin-bottom: rem(20px);\r\n  }\r\n  &__subtitle {\r\n    padding: 0 rem(20px);\r\n    text-align: center;\r\n    font-family: 'Roboto';\r\n    margin-bottom: rem(30px);\r\n  }\r\n  .form {\r\n    justify-content: center;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    font-family: 'Roboto';\r\n\r\n    input{\r\n      height: rem(60px);\r\n      width: rem(224px);\r\n      font-family: 'Roboto';\r\n    }\r\n    button{\r\n      width: rem(60px);\r\n      height: rem(60px);\r\n    }\r\n  }\r\n}"],"names":[],"mappings":"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"}